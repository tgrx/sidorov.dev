[tool.poetry]
authors = ["Alexander Sidorov <alexander@sidorov.dev>"]
description = "Backend of my personal web site"
license = "MIT"
name = "sidorovdev.api"
version = "2024.03.02"


[tool.poetry.dependencies]
attrs = "23.2.0"
devtools = {extras = ["pygments"], version = "0.12.2"}
pydantic = "2.6.3"
python = "3.11.5"

[tool.poetry.group.dev.dependencies]
autoflake = "2.3.0"
black = "24.3.0"
flake8 = "7.0.0"
flake8-annotations-complexity = "0.0.8"
flake8-bandit = "4.1.1"
flake8-black = "0.3.6"
flake8-bugbear = "24.2.6"
flake8-builtins = "2.2.0"
flake8-cognitive-complexity = "0.1.0"
flake8-comprehensions = "3.14.0"
flake8-debugger = "4.1.2"
flake8-executable = "2.1.3"
flake8-expression-complexity = "0.0.11"
flake8-fixme = "1.1.1"
flake8-isort = "6.1.1"
flake8-multiline-containers = "0.0.19"
flake8-mutable = "1.2.0"
flake8-pep3101 = "2.1.0"
flake8-print = "5.0.0"
flake8-printf-formatting = "1.1.2"
flake8-simplify = "0.21.0"
flake8-variables-names = "0.0.6"
isort = "5.13.2"
mypy = "1.8.0"
pep8-naming = "0.13.3"


[tool.black]
line-length = 79
target-version = ["py311"]
include = '^.+\.pyi?$'
extend-exclude = '''
(
    .*\.local.*
    | .*\.idea.*
)
'''


[tool.isort]
force_single_line = true
line_length = 79
multi_line_output = 3
profile = "black"
skip = [".local"]


[tool.pytest.ini_options]
addopts = "--cov --cov-branch"
asyncio_mode = "auto"
cache_dir = ".local/pytest/"
console_output_style = "count"
testpaths = ["tests"]


[tool.mypy]
cache_dir = ".local/mypy/"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = [".local/*", ]
files = ["app", "lib", "tests"]
no_implicit_optional = true
plugins = ["pydantic.mypy"]
pretty = true
python_version = "3.11"
show_error_context = true
sqlite_cache = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true


[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
